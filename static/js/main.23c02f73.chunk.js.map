{"version":3,"sources":["ListItem.js","App.js","index.js"],"names":["ListItem","item","editTodo","deleteTodo","key","id","className","onClick","name","cookie_key","componentName","props","generateTodoId","lastTodo","state","todos","length","addTodo","event","preventDefault","addNew","newTodo","push","setState","bake_cookie","Notiflix","Notify","Success","handleChange","target","value","clear","delete_cookie","Failure","updateTodo","todo","editingIndex","editing","Info","data","read_cookie","filter","x","this","index","placeholder","onChange","map","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23c02f73.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ListItem = ({ item, editTodo, deleteTodo }) => {\r\n\treturn (\r\n    <li key={item.id} className='collection-item animated bounceIn'>\r\n      <i\r\n        className='material-icons left green-text waves-effect'\r\n        onClick={editTodo}\r\n      >\r\n        edit\r\n      </i>\r\n\r\n      {item.name}\r\n\r\n      <i\r\n        className='material-icons right red-text waves-effect'\r\n        onClick={deleteTodo}\r\n      >\r\n        delete_forever\r\n      </i>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { Component, Fragment } from 'react';\nimport './../src/App.css';\nimport ListItem from './ListItem';\nimport Notiflix from 'notiflix-react';\nimport { bake_cookie, read_cookie, delete_cookie } from 'sfcookies';\nconst cookie_key = 'TODOS';\n\nexport default class componentName extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewTodo: '',\n\n\t\t\tediting: false,\n\n\t\t\teditingIndex: null,\n\n\t\t\ttodos: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tlet data = read_cookie(cookie_key).filter(function(x) {\n\t\t\treturn x !== null;\n\t\t});\n\n\t\t\tthis.setState({ todos: data });\n\t\n\t}\n\n\tgenerateTodoId = () => {\n\t\tconst lastTodo = this.state.todos[this.state.todos.length - 1];\n\n\t\tif (lastTodo) {\n\t\t\treturn lastTodo.id + 1;\n\t\t}\n\n\t\treturn 1;\n\t};\n\n\taddTodo = event => {\n\t\tevent.preventDefault();\n\n\t\tconst addNew = {\n\t\t\tname: this.state.newTodo,\n\t\t\tid: this.generateTodoId()\n\t\t};\n\n\t\tconst todos = this.state.todos;\n\t\ttodos.push(addNew);\n\n    this.setState({ todos });\n    \n    this.setState({ newTodo: '' });\n\n\t\tbake_cookie(cookie_key, this.state.todos);\n\n\t\tNotiflix.Notify.Success('A new todo added!');\n\t};\n\n\thandleChange = event => {\n\t\tevent.preventDefault();\n\t\tthis.setState({\n\t\t\tnewTodo: event.target.value\n\t\t});\n\t};\n\n\tclear = () => {\n\t\tdelete_cookie(cookie_key);\n\n\t\tthis.setState({ todos: [{}] });\n\t\tNotiflix.Notify.Failure('All todos deleted!');\n\t};\n\n\tdeleteTodo(index) {\n\t\tlet todos = this.state.todos;\n\n\t\tdelete todos[index];\n\n\t\tthis.setState({ todos });\n\n\t\tNotiflix.Notify.Failure('The todo is deleted!');\n\n\t\tbake_cookie(cookie_key, this.state.todos);\n\t}\n\n\teditTodo(index) {\n\t\tconst todo = this.state.todos[index];\n\n\t\tthis.setState({\n\t\t\tediting: true,\n\t\t\tnewTodo: todo.name,\n\t\t\teditingIndex: index\n\t\t});\n\t}\n\n\tupdateTodo = event => {\n\t\tevent.preventDefault();\n\n\t\tconst todo = this.state.todos[this.state.editingIndex];\n\n\t\ttodo.name = this.state.newTodo;\n\n\t\tconst todos = this.state.todos;\n\n\t\ttodos[this.state.editingIndex] = todo;\n\n\t\tthis.setState({ todos, editing: false, editingIndex: null, newTodo: '' });\n\n\t\tNotiflix.Notify.Info('Todo Updated!');\n\t};\n\n\trender() {\n\t\treturn (\n      <Fragment>\n        <div className='row'>\n          <form className='col s12'>\n            <div className='center paper'>\n              <div className='input-field'>\n                <i className='material-icons prefix'>playlist_add</i>\n                <textarea\n                  id='icon_prefix2'\n                  className='materialize-textarea'\n                  placeholder='Add a new todo'\n                  onChange={this.handleChange}\n                  value={this.state.newTodo}\n                />\n\n                <button\n                  className='waves-effect waves-light btn col s4 left'\n                  onClick={this.state.editing ? this.updateTodo : this.addTodo}\n                >\n                  {this.state.editing ? 'Update Todo' : 'Add Todo'}\n                </button>\n\n                <button\n                  className='waves-effect waves-light btn red col s4 right'\n                  onClick={this.clear}\n                >\n                  Delete All\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n        {!this.state.editing && (\n          <div className=\"paperbody\">\n            <ul className='collection'>\n              {this.state.todos.map((item, index) => {\n                return (\n                  <ListItem\n                    key={item.id}\n                    item={item}\n                    editTodo={() => this.editTodo(index)}\n                    deleteTodo={() => this.deleteTodo(index)}\n                  />\n                );\n              })}\n            </ul>\n          </div>\n        )}\n      </Fragment>\n    );\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}